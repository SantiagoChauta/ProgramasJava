/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author Usuario
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private boolean casilla[][] = new boolean[3][3];
    private String turno = "usuario1";
    private int matriz[][] = new int[3][3];
    private String user1,user2;
    private int gano1,gano2,empate;

    public VentanaPrincipal(String us1,String us2) {
        initComponents();
        setSize(600, 600);
        setResizable(false);
        setLocationRelativeTo(null);
        llenarCasillas();
        llenarMatriz();
        user1=us1;
        user2=us2;
    }

    private void llenarCasillas() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                casilla[i][j] = true;
            }
        }
    }

    private void llenarMatriz() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                matriz[i][j] = 0;
            }
        }
    }

    private void ComprobarGanador() {
        boolean ganador1 = false;
        boolean ganador2 = false;
        int casillasEmpate = 0;
        ganador1 = comprobar(1);
        ganador2 = comprobar(2);

        if (ganador1) {
            
            VentanaGanador vg = new VentanaGanador(this,true,user1);
            gano1++;
            vg.setVisible(true);
            reiniciarJuego();
        } else if (ganador2) {
            
            VentanaGanador vg = new VentanaGanador(this,true,user2);
            gano2++;
            vg.setVisible(true);
            reiniciarJuego();
        } else {
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if(matriz[i][j]!=0){
                        casillasEmpate++;
                    }
                }
            }
            if(casillasEmpate==9){
                new VentanaEmpate(this, true).setVisible(true);
                empate++;
                reiniciarJuego();
            }else{
                casillasEmpate=0;
            }
        }
    }

    private boolean comprobar(int num) {
        boolean ganador = false;
        if (matriz[0][0] == num && matriz[0][1] == num && matriz[0][2] == num) {
            ganador = true;
        } else if (matriz[1][0] == num && matriz[1][1] == num && matriz[1][2] == num) {
            ganador = true;
        } else if (matriz[2][0] == num && matriz[2][1] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][0] == num && matriz[1][0] == num && matriz[2][0] == num) {
            ganador = true;
        } else if (matriz[0][1] == num && matriz[1][1] == num && matriz[2][1] == num) {
            ganador = true;
        } else if (matriz[0][2] == num && matriz[1][2] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][0] == num && matriz[1][1] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][2] == num && matriz[1][1] == num && matriz[2][0] == num) {
            ganador = true;
        }
        return ganador;
    }

    private void reiniciarJuego() {
        llenarCasillas();
        llenarMatriz();
        botonArribaIzquierda.setIcon(null);
        botonArribaDerecha.setIcon(null);
        botonArribaCentro.setIcon(null);
        botonCentroCentro.setIcon(null);
        botonCentroIzquierda.setIcon(null);
        botonCentroDerecha.setIcon(null);
        botonAbajoIzquierda.setIcon(null);
        botonAbajoCentro.setIcon(null);
        botonAbajoDerecha.setIcon(null);
    }

    private void dibujarX(JButton b) {
        b.setIcon(new ImageIcon(getClass().getResource("/Imagenes/xJugador.png")));
    }

    private void dibujarO(JButton b) {
        b.setIcon(new ImageIcon(getClass().getResource("/Imagenes/oJugador.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        botonArribaIzquierda = new javax.swing.JButton();
        botonArribaCentro = new javax.swing.JButton();
        botonArribaDerecha = new javax.swing.JButton();
        botonCentroIzquierda = new javax.swing.JButton();
        botonCentroCentro = new javax.swing.JButton();
        botonCentroDerecha = new javax.swing.JButton();
        botonAbajoIzquierda = new javax.swing.JButton();
        botonAbajoCentro = new javax.swing.JButton();
        botonAbajoDerecha = new javax.swing.JButton();
        barraDeMenu = new javax.swing.JMenuBar();
        menuJuego = new javax.swing.JMenu();
        menuItemComenzarDeNuevo = new javax.swing.JMenuItem();
        menuItemMostrarResultados = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuItemSalir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(3, 3));

        botonArribaIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaIzquierdaActionPerformed(evt);
            }
        });
        jPanel1.add(botonArribaIzquierda);

        botonArribaCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaCentroActionPerformed(evt);
            }
        });
        jPanel1.add(botonArribaCentro);

        botonArribaDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArribaDerechaActionPerformed(evt);
            }
        });
        jPanel1.add(botonArribaDerecha);

        botonCentroIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCentroIzquierdaActionPerformed(evt);
            }
        });
        jPanel1.add(botonCentroIzquierda);

        botonCentroCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCentroCentroActionPerformed(evt);
            }
        });
        jPanel1.add(botonCentroCentro);

        botonCentroDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCentroDerechaActionPerformed(evt);
            }
        });
        jPanel1.add(botonCentroDerecha);

        botonAbajoIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoIzquierdaActionPerformed(evt);
            }
        });
        jPanel1.add(botonAbajoIzquierda);

        botonAbajoCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoCentroActionPerformed(evt);
            }
        });
        jPanel1.add(botonAbajoCentro);

        botonAbajoDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbajoDerechaActionPerformed(evt);
            }
        });
        jPanel1.add(botonAbajoDerecha);

        menuJuego.setText("Juego");
        menuJuego.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        menuItemComenzarDeNuevo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        menuItemComenzarDeNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ComenzarNuevo.jpg"))); // NOI18N
        menuItemComenzarDeNuevo.setText("Comenzar de nuevo");
        menuItemComenzarDeNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemComenzarDeNuevoActionPerformed(evt);
            }
        });
        menuJuego.add(menuItemComenzarDeNuevo);

        menuItemMostrarResultados.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        menuItemMostrarResultados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TablaResultados.png"))); // NOI18N
        menuItemMostrarResultados.setText("Mostrar tabla de resultados");
        menuItemMostrarResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemMostrarResultadosActionPerformed(evt);
            }
        });
        menuJuego.add(menuItemMostrarResultados);
        menuJuego.add(jSeparator1);

        menuItemSalir.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        menuItemSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.png"))); // NOI18N
        menuItemSalir.setText("Salir");
        menuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalirActionPerformed(evt);
            }
        });
        menuJuego.add(menuItemSalir);

        barraDeMenu.add(menuJuego);

        menuAyuda.setText("Ayuda");
        menuAyuda.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        menuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAyudaMouseClicked(evt);
            }
        });
        barraDeMenu.add(menuAyuda);

        setJMenuBar(barraDeMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuItemSalirActionPerformed

    private void botonArribaIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaIzquierdaActionPerformed
        if (casilla[0][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonArribaIzquierda);
                matriz[0][0] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonArribaIzquierda);
                turno = "usuario1";
                matriz[0][0] = 2;
            }
            casilla[0][0] = false;
            ComprobarGanador();
        }

    }//GEN-LAST:event_botonArribaIzquierdaActionPerformed

    private void botonArribaCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaCentroActionPerformed
        if (casilla[0][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonArribaCentro);
                matriz[0][1] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonArribaCentro);
                matriz[0][1] = 2;
                turno = "usuario1";
            }
            casilla[0][1] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonArribaCentroActionPerformed

    private void botonArribaDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArribaDerechaActionPerformed
        if (casilla[0][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonArribaDerecha);
                matriz[0][2] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonArribaDerecha);
                matriz[0][2] = 2;
                turno = "usuario1";
            }
            casilla[0][2] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonArribaDerechaActionPerformed

    private void botonCentroIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCentroIzquierdaActionPerformed
        if (casilla[1][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonCentroIzquierda);
                matriz[1][0] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonCentroIzquierda);
                matriz[1][0] = 2;
                turno = "usuario1";
            }
            casilla[1][0] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonCentroIzquierdaActionPerformed

    private void botonCentroCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCentroCentroActionPerformed
        if (casilla[1][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonCentroCentro);
                matriz[1][1] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonCentroCentro);
                matriz[1][1] = 2;
                turno = "usuario1";
            }
            casilla[1][1] = false;
            ComprobarGanador();

        }
    }//GEN-LAST:event_botonCentroCentroActionPerformed

    private void botonCentroDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCentroDerechaActionPerformed
        if (casilla[1][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonCentroDerecha);
                matriz[1][2] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonCentroDerecha);
                matriz[1][2] = 2;
                turno = "usuario1";
            }
            casilla[1][2] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonCentroDerechaActionPerformed

    private void botonAbajoIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoIzquierdaActionPerformed
        if (casilla[2][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonAbajoIzquierda);
                matriz[2][0] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonAbajoIzquierda);
                matriz[2][0] = 2;
                turno = "usuario1";
            }
            casilla[2][0] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonAbajoIzquierdaActionPerformed

    private void botonAbajoCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoCentroActionPerformed
        if (casilla[2][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonAbajoCentro);
                matriz[2][1] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonAbajoCentro);
                matriz[2][1] = 2;
                turno = "usuario1";
            }
            casilla[2][1] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonAbajoCentroActionPerformed

    private void botonAbajoDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbajoDerechaActionPerformed
        if (casilla[2][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(botonAbajoDerecha);
                matriz[2][2] = 1;
                turno = "usuario2";

            } else {
                dibujarO(botonAbajoDerecha);
                matriz[2][2] = 2;
                turno = "usuario1";
            }
            casilla[2][2] = false;
            ComprobarGanador();
        }
    }//GEN-LAST:event_botonAbajoDerechaActionPerformed

    private void menuItemMostrarResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemMostrarResultadosActionPerformed
        new VentanaTablaResultados(this, true, user1, user2, gano1, gano2, empate).setVisible(true);
        
    }//GEN-LAST:event_menuItemMostrarResultadosActionPerformed

    private void menuItemComenzarDeNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemComenzarDeNuevoActionPerformed
        gano1=gano2=empate=0;
        reiniciarJuego();
    }//GEN-LAST:event_menuItemComenzarDeNuevoActionPerformed

    private void menuAyudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAyudaMouseClicked
        try {
            Desktop.getDesktop().browse(new URI("https://www.mundodeportivo.com/uncomo/ocio/articulo/como-jugar-al-tres-en-raya-2442.html"));
        } catch (URISyntaxException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuAyudaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraDeMenu;
    private javax.swing.JButton botonAbajoCentro;
    private javax.swing.JButton botonAbajoDerecha;
    private javax.swing.JButton botonAbajoIzquierda;
    private javax.swing.JButton botonArribaCentro;
    private javax.swing.JButton botonArribaDerecha;
    private javax.swing.JButton botonArribaIzquierda;
    private javax.swing.JButton botonCentroCentro;
    private javax.swing.JButton botonCentroDerecha;
    private javax.swing.JButton botonCentroIzquierda;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuItem menuItemComenzarDeNuevo;
    private javax.swing.JMenuItem menuItemMostrarResultados;
    private javax.swing.JMenuItem menuItemSalir;
    private javax.swing.JMenu menuJuego;
    // End of variables declaration//GEN-END:variables
}
